version: '3'

services:

  gt-rabbitmq:
    image: rabbitmq:3-management-alpine
    profiles: [ "develop","standalone","test","seed" ]
    container_name: gt-rabbitmq
    volumes:
      - rabbitmq_gt_data:/var/lib/rabbitmq/
      - rabbitmq_gt_log:/var/log/rabbitmq/
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    env_file:
      - .env
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  gt-vault-db:
    profiles: [ "develop","standalone","test","seed" ]
    container_name: gt-vault-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    env_file:
      - .env
    build:
      context: ./db
      dockerfile: Dockerfile
    volumes:
      - postgres_gt_data:/var/lib/postgresql/data

    healthcheck:
      test:
        [
            "CMD-SHELL", "pg_isready -d $POSTGRES_DB -U $POSTGRES_USER"
        ]
      interval: 5s
      timeout: 5s
      retries: 5

  gt-goblin-worker:
    profiles: [ "standalone" ]
    container_name: gt-goblin-worker
    image: ${REGISTRY:-gringotts}/gt-goblin-worker:${TAG:-latest}
    build:
      context: .
      dockerfile: ./worker/Dockerfile  
    depends_on:
      - gt-vault-db
      - gt-rabbitmq
    environment:
      - POSTGRES_HOST=gt-vault-db
      - RABBITMQ_HOST=gt-rabbitmq
      - OTLP_EXPORTER_URL=host.docker.internal:4317
    env_file:
      - .env
    command: bash -c "
      PYTHONPATH=. python ./worker/main.py
      "

  gt-vault-api:
    image: ${REGISTRY:-gringotts}/gt-vault-api:${TAG:-latest}
    build:
      context: .
      dockerfile: ./gringotts/Dockerfile    
    profiles: ["standalone", "test", "seed"]
    container_name: gt-vault-api
    depends_on:
      - gt-vault-db
      - gt-rabbitmq
    environment:
      - POSTGRES_HOST=gt-vault-db
      - OTLP_EXPORTER_URL=host.docker.internal:4317
      - RABBITMQ_HOST=gt-rabbitmq
    env_file:
      - .env
    command: bash -c "
      uvicorn gringotts.main:app
      --host 0.0.0.0 --port 8080
      --lifespan=on --use-colors --loop uvloop --http httptools
      --reload --log-level debug
      "
    volumes:
      - .:/app
    extra_hosts:
      - "host.docker.internal:host-gateway"
 
networks:
  default:
    name: gringotts-network

volumes:
  postgres_gt_data:
  rabbitmq_gt_data:
  rabbitmq_gt_log:
